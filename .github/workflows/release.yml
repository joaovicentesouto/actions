on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

  workflow_dispatch:

name: Create Release

jobs:
  # validation:
  #   name: Validation
  #   uses: joaovicentesouto/actions/.github/workflows/main.yml@main

  # needs: validation
  build:
    name: Build app
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Build project # This would actually build your project, using zip for an example artifact
        run: |
          cd app
          cargo build --release
          zip app.zip target/release/app
      - uses: actions/upload-artifact@v3
        with:
          name: app.zip
          path: app.zip
          
          # - name: Setup upterm session
          #   uses: lhotari/action-upterm@v1
  release:
    name: Create release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Git checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/download-artifact@v3
        with:
          name: app.zip
      - name: Gather commits
        id: commits
        run: |
          previous_tag=$(git describe --abbrev=0 --tags HEAD^)
          commits=$(git log --pretty=format:"%h %s" ${previous_tag}..${{ github.ref }})
          echo "commits=${commits}" >> $GITHUB_OUTPUT
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          body: |
            Changes in this Release
            ${{ steps.commits.outputs.commits }}
      - run: |
          echo "Release created"
          ls
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./app.zip
          asset_name: app.zip
          asset_content_type: application/zip